#pragma once
#include "../HookManager.h"

namespace ActorHook {
	class baseTick : public Hook {
	private:
		static inline std::unique_ptr<FuncHook> funcPtr;
	public:
		baseTick() : Hook("Actor::baseTick") {};
		static void handle(Actor* a1, __int64 entityCtx);
		bool Initialize() override {
			uintptr_t address = SigScan("48 89 5C 24 ?? 48 89 74 24 ?? 48 89 7C 24 ?? 55 41 54 41 55 41 56 41 57 48 8D AC 24 20 FC FF FF 48 81 EC ?? ?? ?? ?? 48 8B 05 ?? ?? ?? ?? 48 33 C4 48 89 85 ?? ?? ?? ?? 48 8B F9 45 33 ED 41 8B F5 44 89 6C 24 ?? 44 38 A9 ?? ?? ?? ?? 74 60 44 39 A9 ?? ?? ?? ?? 7F 46 48 8B 89 ?? ?? ?? ?? 48 8B 01 48 8B 80 ?? ?? ?? ?? FF 15 ?? ?? ?? ?? 48 8B D8 48 85 C0 74 27 48 8B 08 48 8B 81 ?? ?? ?? ?? 48 8B CB FF 15 ?? ?? ?? ?? 84 C0 74 10 48 8B 0B 48 8B 41 ?? 48 8B CB FF 15 ?? ?? ?? ?? C7 87 ?? ?? ?? ?? ?? ?? ?? ?? 40 88 B7 ?? ?? ?? ?? 8B 47 ?? 89 44 24 ?? 48 8D 54 24 ?? 48 8B 4F ?? E8 ?? ?? ?? ?? 48 85 C0 0F 84 CA 0D 00 00 83 38 ?? 0F 85 C1 0D 00 00 8B 47 ?? 89 44 24 ?? 48 8D 54 24");
			return CreateHook(funcPtr, address, handle);
		}
	};
}